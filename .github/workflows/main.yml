name: Android CI

on:
  workflow_dispatch:
  push:
    branches: [ mod ]
  pull_request:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: ${{ !startsWith(github.event.head_commit.message, '[skip ci]') }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'
        fetch-depth: 0

    - name: Write key
      if: github.event_name != 'pull_request' && github.ref == 'refs/heads/master'
      run: |
        if [ ! -z "${{ secrets.KEY_STORE }}" ]; then
          echo androidStorePassword='${{ secrets.KEY_STORE_PASSWORD }}' >> gradle.properties
          echo androidKeyAlias='${{ secrets.ALIAS }}' >> gradle.properties
          echo androidKeyPassword='${{ secrets.KEY_PASSWORD }}' >> gradle.properties
          echo androidStoreFile='key.jks' >> gradle.properties
          echo ${{ secrets.KEY_STORE }} | base64 --decode > key.jks
        fi

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'

    - name: Cache gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          !~/.gradle/caches/build-cache-*
        key: gradle-deps-core-${{ hashFiles('**/build.gradle.kts') }}
        restore-keys: |
          gradle-deps

    - name: Cache gradle build
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches/build-cache-*
          ~/.gradle/buildOutputCleanup/cache.properties
        key: gradle-builds-core-${{ github.sha }}
        restore-keys: |
          gradle-builds

    - name: Cache native build
      uses: actions/cache@v3
      with:
        path: |
          ~/.ccache
          patch-loader/build/.lto-cache
        key: native-cache-${{ github.sha }}
        restore-keys: native-cache-

    - name: Install dep
      run: |
        sudo apt-get install -y ccache
        ccache -o max_size=1G
        ccache -o hash_dir=false
        ccache -o compiler_check='%compiler% -dumpmachine; %compiler% -dumpversion'
        ccache -zp

    - name: Build with Gradle
      run: |
        [ $(du -s ~/.gradle/wrapper | awk '{ print $1 }') -gt 250000 ] && rm -rf ~/.gradle/wrapper/* || true
        find ~/.gradle/caches -exec touch -d "2 days ago" {} + || true
        echo 'org.gradle.caching=true' >> gradle.properties
        echo 'org.gradle.parallel=true' >> gradle.properties
        echo 'org.gradle.vfs.watch=true' >> gradle.properties
        echo 'org.gradle.jvmargs=-Xmx2048m' >> gradle.properties
        echo 'android.native.buildOutput=verbose' >> gradle.properties
        ./gradlew buildAll
        ccache -s

    - name: Upload Debug artifact
      uses: actions/upload-artifact@v3
      with:
        name: lspatch-debug
        path: out/debug/*

    - name: Upload Release artifact
      uses: actions/upload-artifact@v3
      with:
        name: lspatch-release
        path: out/release/*

    - name: Upload mappings
      uses: actions/upload-artifact@v3
      with:
        name: mappings
        path: |
          patch-loader/build/outputs/mapping
          manager/build/outputs/mapping

    - name: Upload symbols
      uses: actions/upload-artifact@v3
      with:
        name: symbols
        path: |
          patch-loader/build/symbols

    
